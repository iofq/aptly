---
name: Releae

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    # see: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    shell: bash --noprofile --norc -eo pipefail {0}

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  ci-release-build:
    name: "CI Build (Binary Release)"
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        goos: [linux, freebsd, darwin]
        goarch: ["386", "amd64", "arm", "arm64"]
        exclude:
          - goos: darwin
            goarch: 386
          - goos: darwin
            goarch: arm
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          # fetch the whole repo for `git describe` to work
          fetch-depth: 0

      - name: "Read go version from go.mod"
        run: |
          echo "GOVER=$(sed -n 's/^go \(.*\)/\1/p' go.mod)" >> $GITHUB_OUTPUT
        id: goversion

      - name: "Setup Go"
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.goversion.outputs.GOVER }}

      - name: "Build packages for ${{ matrix.goos }} ${{ matrix.goarch }}"
        env:
          GOBIN: /usr/local/bin
        run: |
          set -ex
          mkdir -p tmp/man tmp/completion/bash_completion.d tmp/completion/zsh/vendor-completions
          go version
          echo ${{ github.ref_name }} > VERSION
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o tmp/aptly -ldflags='-extldflags=-static'
          cp man/aptly.1 tmp/man/
          cp completion.d/aptly tmp/completion/bash_completion.d/
          cp completion.d/_aptly tmp/completion/zsh/vendor-completions/
          gzip tmp/man/aptly.1
          path=aptly_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}
          mv tmp "$path"
          ls -R "$path"
          zip -r aptly . -i "${path}/**"
          mv aptly.zip "${path}.zip"

      - uses: actions/upload-artifact@v4
        with:
          name: aptly_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: aptly_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  gh-release:
    name: "Github Release: ${{ github.ref_name }}"
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: ci-release-build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: out/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: "out/**/aptly_*.zip"
